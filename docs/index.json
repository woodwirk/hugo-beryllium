[{"categories":["hugo","recipe"],"content":"Instructions  Install a version of Hugo on your computer Install git (or download a Hugo theme directly) Follow the Hugo quickstart guide  If you’re not using the git submodule approach, you will need to adapt the quickstart to your configuration.   If you don’t want to use the hugo terminal commands, you can also create text file content directly.  Front matter Here is the front matter for this simple recipe.\n---\rtitle: Make a website with Hugo - Simple\rweight: 2\rcategories:\r- hugo\r- recipe\r# tags:\r# - layout: recipe\rcomponents:\r- A computer with terminal/shell access\r- Web browser\r- Hugo executable\r- Hugo theme\r- \"[Hugo quickstart](https://gohugo.io/getting-started/quick-start/)\"\rrefs:\r- https://gohugo.io/getting-started/quick-start/\r# origin: person/place/event\rdate: '2024-01-01'\r---\r The components can be added simply like a bullet list. There is the option to use Markdown syntax for each item, but some features will require the item to be formatted as text (by wrapping in quotation marks).\nAll other content features, like linking to images or adding shortcodes, still apply here.\n","tags":null,"title":"01 - Simple - Make a website with Hugo","uri":"/hugo-beryllium/features/recipe-examples/simple/"},{"categories":["hugo","recipe"],"content":"This is a full content page, nested within the advanced example. It shows up on the parent page because that page is _index.md with the recipe layout.\nAll other content features, like linking to images or adding shortcodes, still apply here.\n","tags":null,"title":"Example","uri":"/hugo-beryllium/features/recipe-examples/advanced/example/"},{"categories":["hugo","recipe"],"content":"Instructions Install a version of Hugo on your computer Install git (or download a Hugo theme directly) Follow the Hugo quickstart guide If you’re not using the git submodule approach, you will need to adapt the quickstart to your configuration. If you don’t want to use the hugo terminal commands, you can also create text file content directly. Make this example a bundle and include images. Front matter Here is the front matter for this moderate recipe. ---\rtitle: Make a website with Hugo - Moderate\rlayout: recipe\rweight: 2\rcategories:\r- hugo\r- recipe\r# tags:\r# - components_title: Prepare\rcomponents:\r- Shell access: 1 computer\r- Web browser: Any\r- Hugo executable: v0.78 or later\r- Hugo theme: hugo-beryllium\r\u0026emsp;\u0026emsp;\u0026emsp;\u0026emsp;\u0026emsp;\u0026emsp;(_why not?_)\r- Quickstart: \"[Hugo](https://gohugo.io/getting-started/quick-start/)\"\rrefs:\r- https://gohugo.io/getting-started/quick-start/\r# origin: person/place/event\rdate: '2024-01-01'\r---\rNote the use of key:value pairs this time. You might typically list an item as the key and a quantity or condition as the value. You can also include html in the components lists. ","tags":null,"title":"02 - Moderate - Make a website with Hugo","uri":"/hugo-beryllium/features/recipe-examples/moderate/"},{"categories":null,"content":"This is a page bundle with some photo resources.\n\r\r\r\r\r\r\r\r ","tags":null,"title":"Example 2","uri":"/hugo-beryllium/features/recipe-examples/advanced/example2/"},{"categories":null,"content":" Preheat oven to 325 F Grease and flour two bread tins Beat eggs, oil, vanilla, and sugar in a large bowl Mix flour, salt, baking powder, baking soda, cinnamon separately Add granular ingredients to large bowl, little by little, and mix well Stir in zucchini and nuts Pour batter into pans and bake 40-60 minutes Cool for 20 minutes in pan, on rack Front matter You can also use this style for actual recipes and things that might have more sets of components. ---\rtitle: Zucchini Bread - Moderate+\rslug: zucchini-bread\rweight: 3\rtags:\r- breakfast\rlayout: recipe\rcomponents_title: ingredients\rcomponents:\rLoaf:\r- all-purpose flour: 3 cups\r- salt: 1 tsp\r- baking soda: 1 tsp\r- baking powder: 1 tsp\r- ground cinnamon: 1 tbsp\r- eggs: 3\r- vegetable oil: 1 cup\r- white sugar: 2 1/4 cups\r- vanilla extract: 3 tsp\r- zucchini (grated): 2 cups (1 zucchini)\r- walnuts (chopped): 1 cup\rEquipment:\r- 2x 900g bread tin (4x8\")\rrefs:\r- https://www.allrecipes.com/recipe/6698/moms-zucchini-bread/ |\rThis site is in no way representing or affiliated with the original authors or their views.\rorigin: person/place/event\rdate: '2024-01-01'\rresources: - src: \"public-domain/*\"\rname: public-domain\r---\rThe gallery shortcode is included at the end of the main content in this example. ","tags":["breakfast"],"title":"03 - Moderate+ - Zucchini Bread","uri":"/hugo-beryllium/features/recipe-examples/moderate-plus/"},{"categories":["hugo"],"content":"One way to organize the content in your notes and on the site is though taxonomies like tags and categories. This site will automatically show all of your taxonomy terms on the about page.\nBy default, Hugo uses tags and categories. If you want to use custom terms to organize your site, define your own terms in the format:\nsingular_taxonomy_term = 'front_matter_term'\r Then edit the config.toml file to include a section like the following.\n[taxonomies]\rcategory = 'categories' # explicitly keep the default\rtag = 'tags' # explicitly keep the default\rauthor = 'author' # new\r ","tags":["hugo-features","organization"],"title":"Taxonomies in Hugo","uri":"/hugo-beryllium/hugo-usage/taxonomy/"},{"categories":null,"content":"Maybe you don’t need to visualize files. You just display a list of links (like an Apache2 server). Use a shortcode like the gallery template. Snippet: { {} }\rIn order to display the shortcode above, additional spacing was necessary. The real shortcode should have braces without a middle space, like {{ and }}. (Note: This won’t work with Markdown files because they’re processed by Hugo.) pexels-allan-feitor-7555440.jpg\rpexels-anh-nguyen-16961112.jpg\rpexels-juan-felipe-ram%C3%ADrez-13836756.jpg\rpexels-thibaut-tattevin-18272991.jpg\rpexels-vivian-almeida-16986855.jpg\rpexels-zeynep-sude-emek-18234040.jpg\rA%20Hugo%20website.pdf\r","tags":null,"title":"Shortcode - List files","uri":"/hugo-beryllium/features/media-examples/list-files/"},{"categories":null,"content":"Site title The site title will usually appear in the tab of your web browser, next to the page title. title = \"A Hugo website\"\rBase URL baseurl or baseURL If building for GitHub pages, you may need to specify the full URL for baseurl (e.g. https://woodwirk.github.io/hugo-beryllium/). If building for another service, like AWS, you may be able to just use baseurl = \"/\" Note: If you are setting a base URL that has a path after the domain (e.g. https://woodwirk.github.io/hugo-beryllium/ instead of https://woodwirk.github.io/), you should avoid using regular Markdown links to reference pages on the same site starting with / – use a Hugo shortcode to reference the page. Don’t use: [Link](/about)\rUse this instead: [Link]( { {}})\rNotes: Omit the space between the first two braces – it should be formatted like {{ Don’t use a trailing slash after the page reference – /about, not /about/ Keep the spaces between the curly braces and the parentheses – ( {, not ({ Menu items Site description Edit the metadata site description under the params list. This shows up in the HTML of the page but may not appear on the site or in the browser. [params]\rdescription = \"A website built with Hugo.\"\rHome page content The front page can optionally list content that has a date later than one given. To do so, include the updated_since parameter in the site configuration. updated_since = \"2023-01-01\"\rColors To set the background color of highlights, supply a HEX color in the configuration file. # taxonomy squares and highlights\rbackgroundColor = \"#CBF8DF\"\rtextColor = \"#555555\"\rTaxonomy terms Hugo uses tags and categories as the default taxonomy terms. The search functionality has been configured to comb through tags and categories taxonomy terms, in addition to site content. If you want additional pages on the website, you can configure them like the following “Author” example. Add a new section starting at no indentation in config.toml. See more info on the example site and official documentation. [taxonomies]\rcategory = 'categories'\rtag = 'tags'\rauthor = 'author'\rTable of Contents (TOC) levels If you want to change the formatting of your content files to start at different header levels, edit the start and end levels in the markup config section. [markup]\r[markup.tableOfContents]\rstartLevel = 2\rendLevel = 3\rordered = false\r","tags":null,"title":"`config.toml` settings","uri":"/hugo-beryllium/features/theme-info/settings/"},{"categories":null,"content":"Folders and files By default, all folders with content (sections) will show up on the home page grid. Sub-folders (sub-sections) will appear for each section page, unless a different layout is specified.\nTypically a section or branch bundle is made and identified by adding an _index.md file.\nContent Content files are typically index.md or content-name.md. For more info on Hugo content in general, see here.\nContent files are typically written in Markdown and include front matter to indicate the title and other metadata. This theme actually allows you to include Markdown content without front matter, in case you forget or just want to record notes – though best practice is to include the metadata block at the top. The site will display Markdown files that don’t have front matter by showing the full path of the file for linking purposes.\nYou can group related content for a page in common folders. See the example site’s “Hugo Usage” page or Hugo’s documentation of page bundles for content organization.\nPhotos, audio, and PDF media are supported, as demonstrated in the media examples on this site.\nIf pages aren’t showing at all on the site, check that the page you want to publish is not a draft.\nExamples Pseudo-layout Here’s an example of how you might organize your site files under your main folder:\n- `/config.toml`\r- Name of site, squares color, icon, etc\r- `/static/`\r- `/themes/`\r- `/content/`\r- `_index.md`\r- Any content you want to include above the list of sections (folders immediately under `/content/`)\r- `about.md`\r- With `layout: about` in the front matter\r- Includes any content you include in the body, followed by a list of tags and categories (+links)\r- `post/` (Blog-related content)\r- `topic-1/` (Content related to a given topic)\r- `standalone-content-1.md`\r- `subtopic-1/`\r- `index.md`\r- `supporting-file-1.png`\r- `supporting-file-2.pdf`\r- `supporting-file-3.txt`\r- `topic-2/` (Content related to a different topic)\r- `_index.md`\r- `subtopic-1`\r- `_index.md`\r- `subtopic-1a`\r- `index.md`\r- `supporting-file-1a.jpg`\r- `subtopic-2a`\r- `index.md`\r- `supporting-file-2a.png`\r- `subtopic-2`\r- `_index.md`\r- `sub-subtopic-a`\r- `index.md`\r- `sub-subtopic-b`\r- `index.md`\r- `supporting-files`\r- `index.md` (With `headless: true` in front matter)\r- supporting files which should not be rendered in the site, including `.md` files\r This site Click here to see the folder structure used for this website.\nYou can also clone the theme repository to see for yourself.\n","tags":null,"title":"File structure","uri":"/hugo-beryllium/features/theme-info/structure/"},{"categories":null,"content":"Snippet: This browser does not support PDFs. Please download the PDF to view it: Download PDF.\n--\r\r\rThis browser does not support PDFs. Please download the PDF to view it: Download PDF. --\r","tags":null,"title":"Embed a PDF","uri":"/hugo-beryllium/features/media-examples/pdf/"},{"categories":null,"content":"Snippet: \rStrauss, Johann, et al. Blue Danube waltz. 1912. Audio. Retrieved from the Library of Congress, . ","tags":null,"title":"Embed an audio recording","uri":"/hugo-beryllium/features/media-examples/audio/"},{"categories":["hugo"],"content":"If you want to exclude files, here are a few methods:\n (Probably best approach) Use a headless bundle. The easiest way to do this is to make a new folder, move the content you want to hide, and create an index.md file in that folder. Make sure to include the headless parameter in the front matter, and set it to true. This allows you to keep your content organized in your notes, and you can separate working files (which may include markdown) from the content that shows on the site. Put the name of the file in the ignoreFiles section in config.toml Put the file in a folder matching a pattern listed in the ignoreFiles list.\n(e.g. put all files under a folder named /ignore-hugo/ or include an /ignore-hugo/ directory in each of your sections)  ","tags":["hugo-features","organization","content"],"title":"Excluding content","uri":"/hugo-beryllium/hugo-usage/excluding-content/"},{"categories":["hugo"],"content":"Front matter should be the first thing you add to a plain text file for this site, and it’s how you set the title of a page, date, authors, and taxonomy information like categories and tags. It’s required1 for the content pages of your website, and it’s also useful for organizing your notes offline.\nThis theme includes some custom front matter options described in the features section. Here’s an example:\n---\rtitle: 'Front Matter'\rauthor: woodwirk\rdate: '2022-08-21'\rslug: categories:\r- hugo\rtags:\r- hugo-features\r- organization\rrefs:\r- https://gohugo.io/content-management/front-matter/\r---\r For more information on front matter and how it works, check out the references at the bottom of this page.\n  This theme actually allows you to navigate to Markdown files that don’t have front matter, showing the full path of the file for linking purposes. ↩︎\n   ","tags":["hugo-features","organization"],"title":"Front Matter","uri":"/hugo-beryllium/hugo-usage/front-matter/"},{"categories":["hugo"],"content":"There are three main ways to make content for this site:\n Loose Markdown (.md) files Leaf bundles Branch bundles  Loose Markdown files This is probably the easiest method, and it works well if you don’t need to associate it with images or other files. You just write markdown, call the file whatever you want, put it in a folder, and you’re done. You can still include images, videos, and so on from online sources or the /static/ folder in your website files.\nExamples:\n /content/hugo-usage/taxonomy.md  Leaf bundles This is better for organizing content that requires supporting files. Everything related to the page can be encapsulated in a folder and referenced in a single index.md file. This page is part of a leaf bundle. For my notes, there’s a PDF saved in the folder. If you wanted to, you could display it on this page. (I won’t do that here, though.)\nNote: you should not use a leaf bundle if the content will include subfolders with additional content/pages.\nExamples:\n /content/hugo-usage/front-matter /content/hugo-usage/page-bundles /content/post/2015-01-01-lorem-ipsum /content/post/2016-12-30-hello-markdown  Headless bundles This is a special case. If you have content that you don’t want published – maybe you’re working with markdown files to test something – you can put everything in a folder and include an index.md with headless: true in the front matter. Then the content in the folder won’t be rendered on the website.\nBranch bundles This is better for organizing larger thematic content. Maybe you have a section of notes on recipes, and in that section, you want to organize your files for each recipe by region. Create a folder for each region, and add a file called _index.md to each region folder. Then use leaf bundles or loose Markdown files for each recipe. You can easily keep track of the files used to create the content and potentially display the content using a different scheme or a unique theme for each region.\nNote: you should use a branch bundle if you will be nesting content under a page or want to show subpages in a list format.\nExamples:\n /content/hugo-example-site-files /content/hugo-usage  ","tags":["hugo-features","organization","pages","content"],"title":"Pages in Hugo","uri":"/hugo-beryllium/hugo-usage/page-bundles/"},{"categories":["themes","syntax"],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme. Headings The following HTML — elements represent six levels of section headings.  is the highest section level while  is the lowest. H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat. Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat. Blockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations. Blockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote. Blockquote with attribution Don’t communicate by sharing memory, share memory by communicating. — Rob Pike1 Tables Tables aren’t part of the core Markdown spec, but Hugo supports supports them out-of-the-box. Name Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks \rExample HTML5 Document\r\r\rTest\n\r\rCode block indented with four spaces \rExample HTML5 Document\r\r\rTest\n\r\rCode block with Hugo’s internal highlight shortcode  Example HTML5 Document   Test\n  List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format. H2O Xn + Yn = Zn Press CTRL+ALT+Delete to end the session. Most salamanders are nocturnal, and hunt for insects, worms, and other small creatures. The above quote is excerpted from Rob Pike’s talk during Gopherfest, November 18, 2015. ↩︎ ","tags":["markdown","css","html"],"title":"Markdown Syntax Guide","uri":"/hugo-beryllium/hugo-example-site-files/markdown-syntax/"},{"categories":null,"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode }} --\r Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"/hugo-beryllium/hugo-example-site-files/rich-content/"},{"categories":null,"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","tags":["markdown","text"],"title":"Placeholder Text","uri":"/hugo-beryllium/hugo-example-site-files/placeholder-text/"},{"categories":null,"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }}\r{{ partial \"math.html\" . }}\r{{ end }}\r  To enable KaTex globally set the parameter math to true in a project’s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","tags":null,"title":"Math Typesetting","uri":"/hugo-beryllium/hugo-example-site-files/math-typesetting/"},{"categories":null,"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","tags":["emoji"],"title":"Emoji Support","uri":"/hugo-beryllium/hugo-example-site-files/emoji-support/"},{"categories":null,"content":"Here are some notes without front matter included. It’s just a text file with the .md extension.\n","tags":null,"title":"","uri":"/hugo-beryllium/features/recipe-examples/advanced/notes/"},{"categories":null,"content":"This is an example website for rendering notes from plain text files using Hugo and the hugo-beryllium theme. It doubles as the example site documentation.\nNote Most of this theme was developed using Hugo v0.78.1/extended, which is quite old by the time you’re reading this. It has been lightly screened with v0.140. Some features may need revision for full compatibility with current versions of Hugo.\nThe theme was forked from @jrutheiser/hugo-lithium-theme and @yihui/hugo-lithium. Additionally, it includes the following features, which can be used on a local server.\nFeatures  offline fuzzy searching from fuse.js offline fonts (woff2) offline photo gallery from PhotoSwipe  See more here or on the site repository.\n}} shortcode within the MD link --\rUsage Typical Hugo theme usage. View the example site and docs here: https://woodwirk.github.io/hugo-beryllium\nDemo the example site locally Instead of making a new website from scratch, you could also experiment with this theme’s example site.\ngit clone https://github.com/woodwirk/hugo-beryllium.git\rcd hugo-beryllium\rhugo server --source=\"exampleSite\" --themesDir=\"../../\"\r Build docs:\nhugo -d ../docs --baseURL https://woodwirk.github.io/hugo-beryllium/ --minify --source=\"exampleSite\" --themesDir=\"../../\"\r Get started with your own site If you’ve never used Hugo before, check out the quick start guide.\nFor example:\n Install Hugo Install Git Make a home for your website and set up the theme. Run these commands in your terminal: hugo new site mysite\rcd mysite\rgit init\rgit submodule add https://github.com/woodwirk/hugo-beryllium.git themes/hugo-beryllium\rcp themes/hugo-beryllium/exampleSite/config.toml config.toml\r   Use the Front Matter extension in VS Code I tried to work with Hugo manually for some time. Eventually it became too much to remember each time I came back after a hiatus, and it can be challenging for someone new to get acclimated. Front Matter takes care of that and more with a convenient sidebar GUI.\nThis repository includes helper files for getting started with Front Matter. To take advantage of them, just copy over at least the frontmatter.json file into your main website folder. You can also use the .frontmatter folder to set up the basis for templates and other features.\ncp themes/hugo-beryllium/frontmatter.json frontmatter.json\r  ","tags":null,"title":"About","uri":"/hugo-beryllium/about/"},{"categories":null,"content":"force_toc Force a table of contents to appear. Otherwise, TOC appears only for content longer than 400 words when toc is enabled. Usage toc: true\rforce_toc: true # or false\rrefs List references in the front matter, and they will appear at the bottom of the page, after the main content. The template is included in list-title, list, recipe, single (default) layouts. It is supplied as a partial, so it can be included in other layouts. Markdown content is processed. Usage refs:\r- https://gohugo.io/content-management/front-matter/ |\rThe official Hugo documentation.\r- \"**Formatted** from an informal interview\"\r- \"[Local content](./content-page)\"\rkeys An array of bullet points to show at the top of single (default) and recipe layouts. This is a partial template that can be included in other layouts as well. Note: Keys are not run through the Markdown processor, so avoid decorators or special formatting. Usage keys:\r- Format key points like an unordered list\r- This is a key point\r- These will appear at the top of the page for `single` and `recipe` layouts\rcomponents_title A heading to show at the top of the recipe layout sidebar. Note: If unspecified, the list will be titled “Elements” at the top. Usage components_title: Equipment\rcomponents For guides, how-to pages, and recipes using the recipe layout, a list of materials. There are multiple possibilities for formatting, shown below. Note: Components are run through the Markdown processor, so formatting is allowed. Usage Case 1 - Plain elements components:\r- A computer with terminal/shell access\r- Web browser\r- Hugo executable\r- Hugo theme\r- \"[Hugo quickstart](https://gohugo.io/getting-started/quick-start/)\"\rCase 2 - Named elements components:\r- Shell access: 1 computer\r- Web browser: Any\r- Hugo executable: v0.78 or later\r- Hugo theme: hugo-beryllium\r\u0026emsp;\u0026emsp;\u0026emsp;\u0026emsp;\u0026emsp;\u0026emsp;(_why not?_)\r- Quickstart: \"[Hugo](https://gohugo.io/getting-started/quick-start/)\"\rCase 3 - Mixed elements If using mixed elements, the first item must not have a dash before it. components:\rLoaf:\r- all-purpose flour: 3 cups\r- salt: 1 tsp\r- baking soda: 1 tsp\r- baking powder: 1 tsp\r- ground cinnamon: 1 tbsp\r- eggs: 3\r- vegetable oil: 1 cup\r- white sugar: 2 1/4 cups\r- vanilla extract: 3 tsp\r- zucchini (grated): 2 cups (1 zucchini)\r- walnuts (chopped): 1 cup\rEquipment:\r- 2x 900g bread tin (4x8\")\rtime Indicate the approximate time needed in content using the recipe layout. Note: This content is not formatted. Usage time: ~2 hrs\r","tags":null,"title":"Front matter parameters","uri":"/hugo-beryllium/features/theme-info/front-matter/"},{"categories":null,"content":"about Includes content, if it is present, and all taxonomy terms. Taxonomy terms are listed by section and arranged into a grid of squares.\nhome Includes section links in square grid layout. Below the sections, recent content is included. The date can be configured in the site settings.\nsingle The default layout for content pages. Includes key points at the top, references at the bottom, and a list of tags associated with the page.\nrecipe Based on the single page layout.\nIncludes components in a sidebar and content in a main panel. If the recipe layout is used on _index.md files with other content files in the same folder, those files will be linked at the bottom of the page.\nThere are multiple ways to use the recipe layout and organize the sidebar contents, as shown by the different front matter organization in the recipe examples.\nlayout: recipe\r section Includes a taxonomy-style list of subsections.\nSubsections must be at the top level of the folder structure or contain an _index.md to be included in the squares format.\nlayout: section\r list-title Manually applied to the _index.md of a branch bundle or section.\nLists contents by article title.\nlayout: list-section\r list-section Manually applied to the _index.md of a branch bundle or section.\nIncludes each subsection in the taxonomy squares format, followed by content in the same folder in an archive list format. Sort by section weight.\nTo include content under a subsection, create a branch bundle/section (a folder with _index.md) under the main branch/section. Do not show pages if they aren’t in a section.\nlayout: list-section\r list-section-tags Derived from above (list-section) but lists the top three tags of each content page to the right of the page. Tags will not appear on responsive mobile layouts where screen width is small.\nlayout: list-section\r ","tags":null,"title":"Layouts","uri":"/hugo-beryllium/features/theme-info/layouts/"},{"categories":null,"content":"There are a couple of ways to include a photo or gif in your content. Standard Markdown This is easy and familiar, but it doesn’t give you much control over the image. ![a photo](pexels-allan-feitor-7555440.jpg)\rFigure shortcode To adjust the image size, include a figure instead of using Markdown. You can also specify a caption for the image. This theme is configured to center the image and caption. { {}}\r# don't forget to remove the space between the first two brackets.\rA photo from Pexels, in the public domain. Hugo image processing There are also some other options from Hugo for resizing images or performing other operations. See more here: https://gohugo.io/content-management/image-processing/. ","tags":null,"title":"Photos as figure with caption","uri":"/hugo-beryllium/features/media-examples/photo-figure/"},{"categories":null,"content":"Photoswipe provides image gallery functionality. A version is archived in this repository/theme for offline use. Images will be displayed in a nested layout. Click one to expand it and show at full resolution. Snippet: { {} }\r# or\r{ {} }\rNote: In order for Hugo to display the shortcode above without rendering it, additional spacing was necessary. The real shortcode should have braces without a middle space, like {{ and }}, with their respective  characters. Gallery\rUsage There are now a few ways to use this feature. How you use the shortcode depends on your file structure. With a leaf bundle (index.md in a folder) Put photos in subfolders or at the same level as index.md. 1. Most explicit Declare the page resources in the front matter. This includes a src and name. Reference the name in the shortcode as { {}}. Doing so allows you to include multiple folders and reference at different points using the name you provide in the front matter. You can also give the gallery a title to appear as a header. Files photo-gallery\r| index.md\r| \\---folder1\rphoto1.jpg\rphoto2.jpg\rphoto3.jpg\rphoto4.jpg\rFront matter resources:\r- src: \"folder1/*\"\rname: name\rMarkdown Here is some content, followed by a gallery.\r{ {}}\r2. Moderate Optionally declare page resources. Include the gallery shortcode with or without a title. You can reference different subfolders of images by specifying a folder with a wildcard. (e.g. folder=“photos*” vs folder=“bonus*\") Files photo-gallery\r| index.md\r| \\---folder1\rphoto1.jpg\rphoto2.jpg\rphoto3.jpg\rphoto4.jpg\rFront matter No photo resources declared. Markdown Here is some content, followed by a gallery.\r{ {}}\rGallery\r--\r3. Least explicit Optionally declare page resources. Include the gallery shortcode with no folder listed (title optional). This will include all photo resources at every level of the file structure. Files photo-gallery\r| index.md\r| photo1.jpg\r| photo2.jpg\r| photo3.jpg\r| \\---folder1\rphoto1.jpg\rphoto2.jpg\rphoto3.jpg\rphoto4.jpg\rFront matter No photo resources declared. Markdown Here is some content, followed by a gallery.\r{ {}}\r--\rWith a branch bundle (_index.md at the top) All photo resources must be in the same folder as _index.md to show up on the main page. Include the gallery shortcode with no folder listed (title optional). Any photos in subfolders will not be displayed. Files photo-gallery\r_index.md\rphoto1.jpg\rphoto2.jpg\rphoto3.jpg\rphoto4.jpg\rFront matter No photo resources declared. Markdown Here is some content, followed by a gallery.\r{ {}}\r","tags":null,"title":"Shortcode - Photo gallery","uri":"/hugo-beryllium/features/media-examples/photo-gallery/"}]